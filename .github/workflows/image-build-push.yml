name: "Build & push image"

on:
  workflow_call:
    inputs:
      cr_repository:
        description: Repository where the built image shall be pushed, e.g. 'cascadin-wiki', 'cascadin-app'.
        required: true
        type: string
      helm_release_namespace:
        description: Kubernetes namespace corresponding to a Helm release, e.g. 'development'.
        required: true
        type: string
      repository:
        description: The GitHub repository to clone, e.g. 'cascadin/cascadin-wiki'.
        required: false
        default: ${{ github.repository }}
        type: string

    secrets:
      gc_compute_region:
        description: The Google Cloud Compute Region where the assets reside.
        required: true
      gc_compute_zone:
        description: The Google Cloud Compute Zone where the assets reside.
        required: true
      gc_gke_cluster:
        description: The cluster name on the Google Kubernetes Engine (GKE).
        required: true
      gc_project_id:
        description: The Google Cloud Project ID.
        required: true
      gc_service_account:
        description: The Google Cloud Service Account tied to the WIP.
        required: true
      gc_workload_identity_provider:
        description: The Google Cloud Workload Identity Provider (WIP).
        required: true

jobs:
  build-push:
    name: Build/push image
    runs-on: ubuntu-20.04

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download Shared Workflow Properties
        uses: actions/download-artifact@v3
        with:
          name: shared-workflow-props

      - name: Apply Shared Workflow Properties
        working-directory: .
        run: |-
          source workflow.properties
          echo "GIT_REF=${gitRef}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${releaseVersion}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: .
          ref: ${{ env.GIT_REF }}
          repository: ${{ inputs.repository }}

      - name: Set Up Tools
        uses: cascadin/github-actions/.github/actions/gcloud-helm-setup@main
        with:
          cluster_name: ${{ secrets.gc_gke_cluster }}
          location: ${{ secrets.gc_compute_zone }}
          service_account: ${{ secrets.gc_service_account }}
          workload_identity_provider: ${{ secrets.gc_workload_identity_provider }}

      - name: Configure Git
        uses: cascadin/github-actions/.github/actions/configure-git@main

      - name: Build the image
        run: |-
          docker build \
            --file ./Dockerfile \
            --target release-stage \
            --tag "${{ secrets.gc_compute_region }}-docker.pkg.dev/${{ secrets.gc_project_id }}/${{ inputs.cr_repository }}/${{ inputs.cr_repository }}:${{ env.RELEASE_VERSION }}"

      - name: Push the image
        run: |-
          docker push "${{ secrets.gc_compute_region }}-docker.pkg.dev/${{ secrets.gc_project_id }}/${{ inputs.cr_repository }}/${{ inputs.cr_repository }}:${{ env.RELEASE_VERSION }}"

#      - name: Build/push image to CR
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./Dockerfile
#          target: release-stage
#          push: true
#          tags: "${{ secrets.gc_compute_region }}-docker.pkg.dev/${{ secrets.gc_project_id }}/${{ inputs.cr_repository }}/${{ inputs.cr_repository }}:${{ env.RELEASE_VERSION }}"
